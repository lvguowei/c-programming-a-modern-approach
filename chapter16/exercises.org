* 20
#+BEGIN_SRC C :results output
  #include <stdio.h>
  int main() {
    enum {NORTH, SOUTH, EAST, WEST} direction;
    direction = NORTH;
    int x = 1, y = 1;
    switch (direction) {
    case NORTH: {
      y--;
      break;
    }
    case SOUTH: {
      y++;
      break;
    }
    case WEST: {
      x--;
      break;
    }
    case EAST: {
      x++;
      break;
    }
    default:
      break;
    }
    printf("x = %d, y = %d\n", x, y);
    return 0;
  }
#+END_SRC

#+RESULTS:
: x = 1, y = 0

* 21
#+BEGIN_SRC C
  #include <stdio.h>

  int main(int argc, char *argv[])
  {
    enum {NUL, SOH, STX, ETX};
    enum {VT = 11, FF, CR};
    enum {SO = 14, SI, DLE, CAN = 24, EM};
    enum {ENQ = 45, ACK, BEL, LF = 37, ETB, ESC};
    printf("%d %d %d %d\n", NUL, SOH, STX, ETX);
    printf("%d %d %d\n", VT, FF, CR);
    printf("%d %d %d %d %d\n", SO, SI, DLE, CAN, EM);
    printf("%d %d %d %d %d %d\n", ENQ, ACK, BEL, LF, ETB, ESC);
    return 0;
  }

#+END_SRC

#+RESULTS:
|  0 |  1 |  2 |  3 |    |    |
| 11 | 12 | 13 |    |    |    |
| 14 | 15 | 16 | 24 | 25 |    |
| 45 | 46 | 47 | 37 | 38 | 39 |

* 22
#+BEGIN_SRC C
  #include <stdio.h>

  int main(int argc, char *argv[])
  {
    enum chess_pieces {KING, QUEEN, ROOT, BISHOP, KNIGHT, PAWN};
    int piece_value[] = {200, 9, 5, 3, 3, 1};
    int piece_value2[] = {[KING] = 200, [QUEEN] = 9, [ROOT] = 5, [BISHOP] = 3, [KNIGHT] = 3, [PAWN] = 1};
    for (int i = 0; i < PAWN; ++i) {
      printf("%d\n", piece_value2[i]);
    }

    return 0;
  }
#+END_SRC

#+RESULTS:
| 200 |
|   9 |
|   5 |
|   3 |
|   3 |
